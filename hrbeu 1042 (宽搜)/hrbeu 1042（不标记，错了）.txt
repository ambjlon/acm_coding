#include <iostream>
#include <string>
#include <deque>
#include <memory.h>

using namespace std;

char dungeon[40][40][40];
typedef struct qu
{
	int x,y,z;
	//int dir;//0 up,1 down,2 front,3 back,4 left,5 right
	int mov;
}Q,*PQ;

int main()
{
	int  i,j,k,yes;
	int l,r,c;
	int dir[6][3] = {{0,0,1},{0,0,-1},{0,1,0},{0,-1,0},{-1,0,0},{1,0,0}};
	string s;
	Q el,el1;
	deque<Q> queue;
	
	cin >> l >> r >> c;
	while(l != 0 && r != 0 && r != 0)
	{
		memset(dungeon,'#',sizeof(dungeon));
		queue.clear();
		for(i = 0;i < l;i ++)
		{
			for(j = 0;j < r;j ++)
			{
				cin >> s;
				s.copy(dungeon[i][j],s.size(),0);
			}
		}
			yes = 0;
			for(i = 0;i < l;i ++)//z
				for(j = 0;j < r;j ++)//x
					for(k = 0;k < c;k ++)//y
						if(dungeon[i][j][k] == 'S')
						{
							el.x = i;
							el.y = j;
							el.z = k;
						//	el.dir = -1;
							el.mov = 0;
							queue.push_back(el);
							break;
						}
						while(1)
						{
							el = *(queue.begin());
							queue.pop_front();
							for(i = 0;i <= 5;i ++)
								if(1/*i != el.dir*/)
								{
									el1.x = el.x + dir[i][0];
									el1.y = el.y + dir[i][1];
									el1.z = el.z + dir[i][2];
									if((el1.x < 0 || el1.y < 0 || el1.z < 0) || dungeon[el1.x][el1.y][el1.z] == '#')
										continue;
									else
									{
										//el1.dir = (i % 2 == 0) ? (i + 1): (i -1);
										el1.mov = el.mov + 1;
										queue.push_back(el1);
										if(dungeon[el1.x][el1.y][el1.z] == 'E')
										{
											yes = 1;
											break;
										}
										dungeon[el1.x][el1.y][el1.z] = '#';
									}
								}
							if(yes || queue.empty())
								break;
						}
						if(yes)
							cout << "Escaped in " <<el1.mov<<" minute(s)."<<endl;
						else
							cout <<"Trapped!"<<endl;
						cin >> l >> r >> c;
	}
	return 0;
}